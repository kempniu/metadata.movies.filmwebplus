<?xml version="1.0" encoding="utf-8"?><scraper framework="1.1" date="2012-10-26" name="Filmweb+" content="movies" language="pl">
	<!-- Match only URLs starting with http://www.filmweb.pl/ -->
	<NfoUrl dest="3">
		<RegExp input="$$1" output="&lt;url&gt;\1&lt;/url&gt;" dest="3">
			<expression noclean="1">(http://www.filmweb.pl/[^\r\n]+)</expression>
		</RegExp>
	</NfoUrl>
	<CreateSearchUrl dest="3">
		<!--Movie title is pre-urlencoded by Kodi - no need to urlencode manually-->
		<RegExp input="" output="&lt;url&gt;http://www.filmweb.pl/search/film?q=$$1&amp;amp;startYear=$$2&amp;amp;endYear=$$2&lt;/url&gt;" dest="3">
			<expression />
		</RegExp>
	</CreateSearchUrl>
	<GetSearchResults dest="3">
		<!--Enclose results in <results></results>-->
		<RegExp input="$$5" output="&lt;results sorted=&quot;yes&quot;&gt;\1&lt;/results&gt;" dest="3">
			<!--Fetch search results (title, year, URL)-->
			<RegExp input="$$1" output="&lt;entity&gt;&lt;title&gt;\2&lt;/title&gt;&lt;year&gt;\3&lt;/year&gt;&lt;url&gt;http://www.filmweb.pl\1&lt;/url&gt;&lt;/entity&gt;" dest="5+">
				<expression repeat="yes">&lt;h3&gt;&lt;a href="([^"]+)" class="hdr hdr-medium hitTitle"&gt;(.*?)&lt;/a&gt;&lt;span class="hdr hdr-medium hitTitle"&gt;\((\d+)\)&lt;/span&gt;&lt;/h3&gt;</expression>
			</RegExp>
			<expression fixchars="1" noclean="1" />
		</RegExp>
	</GetSearchResults>
	<GetDetails dest="3">
		<!--Enclose fetched details in <details></details>-->
		<RegExp input="$$5" output="&lt;details&gt;\1&lt;/details&gt;" dest="3">
			<!--Enclose title (fetched from buffer 6) in <title></title>-->
			<RegExp input="$$6" output="&lt;title&gt;\1&lt;/title&gt;" dest="5+">
				<!--Save title in buffer 6-->
				<RegExp input="$$1" output="\1" dest="6">
					<expression>v:name[^&gt;]+&gt;([^&lt;]+)</expression>
				</RegExp>
				<expression />
			</RegExp>
			<!--Enclose original title (fetched from buffer 6 - buffer 7 is urlencoded!) in <originaltitle></originaltitle>-->
			<RegExp input="$$6" output="&lt;originaltitle&gt;\1&lt;/originaltitle&gt;" dest="5+">
				<!--Save original title in buffer 6, if it exists-->
				<RegExp input="$$1" output="\1" dest="6">
					<expression>&lt;h2 class="cap s-16 top-5"&gt;([^&lt;]+)</expression>
				</RegExp>
				<!--Replace "Movie, The" with "The Movie" etc.-->
				<RegExp input="$$6" output="\2 \1" dest="6">
					<expression>(.*), (A|An|The)$</expression>
				</RegExp>
				<!--urlencode buffer 6 (original title if it exists, Polish title otherwise) to buffer 7 to re-use it in later calls-->
				<RegExp input="$$6" output="\1" dest="7">
					<expression encode="1" fixchars="1" />
				</RegExp>
				<!--Replace Roman "II" at the end of the title with Arabic "2" to work around some incorrect Filmweb titles (caveat: buffer 7 is urlencoded!)-->
				<RegExp input="$$7" output="\1%202" dest="7">
					<expression>(.*)%20II$</expression>
				</RegExp>
				<!--Replace Roman "III" at the end of the title with Arabic "3" to work around some incorrect Filmweb titles (caveat: buffer 7 is urlencoded!)-->
				<RegExp input="$$7" output="\1%203" dest="7">
					<expression>(.*)%20III$</expression>
				</RegExp>
				<expression />
			</RegExp>
			<!--Enclose year (fetched from buffer 6 for unification with title fetching) in <year></year>-->
			<RegExp input="$$6" output="&lt;year&gt;\1&lt;/year&gt;" dest="5+">
				<!--Save year in buffer 6-->
				<RegExp input="$$1" output="\1" dest="6">
					<expression>&lt;span class="halfSize"&gt;\((\d+)\)</expression>
				</RegExp>
				<!--Copy buffer 6 (year) to buffer 8 to re-use it in later calls-->
				<RegExp input="$$6" output="\1" dest="8">
					<expression />
				</RegExp>
				<expression />
			</RegExp>
			<!--Fetch countries-->
			<RegExp input="$$1" output="&lt;country&gt;\1&lt;/country&gt;" dest="5+">
				<expression repeat="yes">&lt;a href="/search/film\?countryIds=\d+"&gt;([^&lt;]+)</expression>
			</RegExp>
			<!--Fetch rating, replacing comma with decimal point-->
			<RegExp input="$$1" output="&lt;rating&gt;\1.\2&lt;/rating&gt;" dest="5+">
				<expression>v:average[^&gt;]+&gt;\s*(\d+),(\d+)</expression>
			</RegExp>
			<!--Fetch number of votes-->
			<RegExp input="$$1" output="&lt;votes&gt;\1&lt;/votes&gt;" dest="5+">
				<expression>v:votes[^&gt;]+&gt;([^&lt;]+)</expression>
			</RegExp>
			<!--Fetch genres-->
			<RegExp input="$$1" output="&lt;genre&gt;\1&lt;/genre&gt;" dest="5+">
				<expression repeat="yes">&lt;a href="/search/film\?genreIds=\d+"&gt;([^&lt;]+)</expression>
			</RegExp>
			<!--Fetch actors from cast, along with portraits and roles-->
			<RegExp input="$$6" output="&lt;actor&gt;&lt;thumb&gt;\1&lt;/thumb&gt;&lt;name&gt;\2&lt;/name&gt;&lt;role&gt;\3&lt;/role&gt;&lt;/actor&gt;" dest="5+">
				<!--Extract cast-->
				<RegExp input="$$1" output="\1" dest="6">
					<expression noclean="1">&lt;table class="filmCast(.*?)&lt;/table&gt;</expression>
				</RegExp>
				<expression repeat="yes">&lt;tr.*?src="([^"]+).*?rel="v:starring"&gt;([^&lt;]+).*?class="as.*?&lt;td[^&gt;]*&gt;&lt;span[^&gt;]*&gt;([^&lt;]+)</expression>
			</RegExp>
			<!--Fetch directors-->
			<RegExp input="$$1" output="&lt;director&gt;\1&lt;/director&gt;" dest="5+">
				<expression repeat="yes">v:directedBy[^&gt;]+&gt;([^&lt;]+)</expression>
			</RegExp>
			<!--Fetch writers' names-->
			<RegExp input="$$6" output="&lt;credits&gt;\1&lt;/credits&gt;" dest="5+">
				<!--Extract writers-->
				<RegExp input="$$1" output="\1" dest="6">
					<expression noclean="1">&lt;th&gt;scenariusz:&lt;/th&gt;&lt;td&gt;(.*?)&lt;/td&gt;</expression>
				</RegExp>
				<expression repeat="yes">&lt;a href="/person[^&gt;]+&gt;([^&lt;]+)</expression>
			</RegExp>
			<!--Fetch just the first plot description-->
			<RegExp input="$$1" output="&lt;plot&gt;\1&lt;/plot&gt;" dest="5+">
				<expression>v:summary[^&gt;]+&gt;(.*?)(&lt;/span&gt;|&lt;/p&gt;)</expression>
			</RegExp>
			<!--Fetch the main poster first-->
			<RegExp input="$$1" output="&lt;thumb preview=&quot;\2&quot;&gt;\1&lt;/thumb&gt;" dest="5+">
				<expression>v:image" href="([^"]+).*?src="([^"]+)</expression>
			</RegExp>
			<!--Other posters will be grabbed by GetPosters as another HTTP request is required-->
			<RegExp input="$$1" output="&lt;url function=&quot;GetPosters&quot;&gt;http://www.filmweb.pl\1&lt;/url&gt;" dest="5+">
				<expression>{url:"([^"]+/posters)"</expression>
			</RegExp>
			<!--Trailer will be grabbed by GetTrailer as another HTTP request is required-->
			<RegExp input="$$1" output="&lt;url function=&quot;GetTrailer&quot;&gt;http://www.filmweb.pl\1&lt;/url&gt;" dest="5+">
				<expression>film-videos.*?a href="(/video/zwiastun/[^"]+)</expression>
			</RegExp>
			<!--Prepare IMDB search URL using previously prepared title (buffer 7) and year (buffer 8)-->
			<RegExp input="" output="&lt;chain function=&quot;Latinize&quot;&gt;GetIMDBSearch:http://www.imdb.com/search/title?release_date=$$8,$$8&amp;amp;title=$$7&amp;amp;title_type=feature,tv_movie,documentary,video&lt;/chain&gt;" dest="5+">
				<expression />
			</RegExp>
			<!--Prepare TMDB search URL using previously prepared title (buffer 7) and year (buffer 8)-->
			<RegExp input="" output="&lt;chain function=&quot;Latinize&quot;&gt;GetTMDBSearch:http://www.themoviedb.org/search/movie?query=$$7+y%3A$$8&lt;/chain&gt;" dest="5+">
				<expression />
			</RegExp>
			<expression fixchars="1" noclean="1" />
		</RegExp>
	</GetDetails>
	<GetPosters dest="3">
		<!--Enclose posters in <details></details>-->
		<RegExp input="$$5" output="&lt;details&gt;\1&lt;/details&gt;" dest="3">
			<!--Fetch posters-->
			<RegExp input="$$1" output="&lt;thumb preview=&quot;\1&quot;&gt;\2&lt;/thumb&gt;" dest="5">
				<expression repeat="yes">"thumb":"([^"]+)","src":"([^"]+)</expression>
			</RegExp>
			<expression noclean="1" />
		</RegExp>
	</GetPosters>
	<GetTrailer dest="3">
		<!--Enclose trailer in <details><trailer></trailer></details>-->
		<RegExp input="$$5" output="&lt;details&gt;&lt;trailer&gt;\1&lt;/trailer&gt;&lt;/details&gt;" dest="3">
			<!--Fetch only the first trailer-->
			<RegExp input="$$1" output="\1" dest="5">
				<expression>src:\["([^"]+)</expression>
			</RegExp>
			<!--Also try different syntax-->
			<RegExp input="$$1" output="\1" dest="5">
				<expression>source src="([^"]+)</expression>
			</RegExp>
			<!--Invoke YouTube plugin if the trailer is sourced from YouTube-->
			<RegExp input="$$5" output="plugin://plugin.video.youtube/?action=play_video&amp;amp;videoid=\1" dest="5">
				<expression>http://www.youtube.com/v/(.*)</expression>
			</RegExp>
			<expression noclean="1" />
		</RegExp>
	</GetTrailer>
	<!--

		This is a recurrent function which first replaces Polish
		characters from its argument with their Latin counterparts
		and then splits the converted argument into a function name and
		a latinized string (format is "fname:lstring"). The value
		returned by Latinize is a call to a URL function "fname" with
		a latinized argument "lstring".

		I am aware that this function's code may be confusing but this
		is the price we have to pay for no built-in replacing function
		being available to Kodi scrapers. Each iteration replaces
		a single occurence of every Polish letter - here is how an
		example string will look like after each iteration:

			0. ąąąąćććęęł
			1. ąąąaććcęel
			2. ąąaaćcceel
			3. ąaaaccceel
			4. aaaaccceel

		Once there are no more Polish letters present in the search
		URL, the function stops calling itself and instead outputs
		a call to the supplied URL function.

		Note: input for Latinize is pre-urlencoded.

	-->
	<Latinize dest="3">
		<!--Enclose result in <details></details>-->
		<RegExp input="$$6" output="&lt;details&gt;\1&lt;/details&gt;" dest="3">
			<!--Copy input to buffer 5 for processing-->
			<RegExp input="$$1" output="\1" dest="5">
				<expression />
			</RegExp>
			<!--Replace "ą" with "a"-->
			<RegExp input="$$5" output="\1a\2" dest="5">
				<expression>(.*)%c4%85(.*)</expression>
			</RegExp>
			<!--Replace "ć" with "c"-->
			<RegExp input="$$5" output="\1c\2" dest="5">
				<expression>(.*)%c4%87(.*)</expression>
			</RegExp>
			<!--Replace "ę" with "e"-->
			<RegExp input="$$5" output="\1e\2" dest="5">
				<expression>(.*)%c4%99(.*)</expression>
			</RegExp>
			<!--Replace "ł" with "l"-->
			<RegExp input="$$5" output="\1l\2" dest="5">
				<expression>(.*)%c5%82(.*)</expression>
			</RegExp>
			<!--Replace "ń" with "n"-->
			<RegExp input="$$5" output="\1n\2" dest="5">
				<expression>(.*)%c5%84(.*)</expression>
			</RegExp>
			<!--Replace "ś" with "s"-->
			<RegExp input="$$5" output="\1s\2" dest="5">
				<expression>(.*)%c5%9b(.*)</expression>
			</RegExp>
			<!--Replace "ż" with "z"-->
			<RegExp input="$$5" output="\1z\2" dest="5">
				<expression>(.*)%c5%bc(.*)</expression>
			</RegExp>
			<!--Replace "ź" with "z"-->
			<RegExp input="$$5" output="\1z\2" dest="5">
				<expression>(.*)%c5%ba(.*)</expression>
			</RegExp>
			<!--Replace "Ą" with "A"-->
			<RegExp input="$$5" output="\1A\2" dest="5">
				<expression>(.*)%c4%84(.*)</expression>
			</RegExp>
			<!--Replace "Ć" with "C"-->
			<RegExp input="$$5" output="\1C\2" dest="5">
				<expression>(.*)%c4%86(.*)</expression>
			</RegExp>
			<!--Replace "Ę" with "E"-->
			<RegExp input="$$5" output="\1E\2" dest="5">
				<expression>(.*)%c4%98(.*)</expression>
			</RegExp>
			<!--Replace "Ł" with "L"-->
			<RegExp input="$$5" output="\1L\2" dest="5">
				<expression>(.*)%c5%81(.*)</expression>
			</RegExp>
			<!--Replace "Ń" with "N"-->
			<RegExp input="$$5" output="\1N\2" dest="5">
				<expression>(.*)%c5%83(.*)</expression>
			</RegExp>
			<!--Replace "Ś" with "S"-->
			<RegExp input="$$5" output="\1S\2" dest="5">
				<expression>(.*)%c5%9a(.*)</expression>
			</RegExp>
			<!--Replace "Ż" with "Z"-->
			<RegExp input="$$5" output="\1Z\2" dest="5">
				<expression>(.*)%c5%bb(.*)</expression>
			</RegExp>
			<!--Replace "Ź" with "Z"-->
			<RegExp input="$$5" output="\1Z\2" dest="5">
				<expression>(.*)%c5%b9(.*)</expression>
			</RegExp>
			<!--Enclose processed result in <url></url>...-->
			<RegExp input="$$5" output="&lt;url function=&quot;\1&quot;&gt;\2&lt;/url&gt;" dest="6">
				<expression>(.*?):(.*)</expression>
			</RegExp>
			<!--...but if there are any unprocessed characters left in the search URL, call self again-->
			<RegExp input="$$5" output="&lt;chain function=&quot;Latinize&quot;&gt;\1&lt;/chain&gt;" dest="6">
				<expression>(.*(%c4%85|%c4%87|%c4%99|%c5%82|%c5%84|%c5%9b|%c5%bc|%c5%ba|%c4%84|%c4%86|%c4%98|%c5%81|%c5%83|%c5%9a|%c5%bb|%c5%b9).*)</expression>
			</RegExp>
			<expression noclean="1" />
		</RegExp>
	</Latinize>
	<GetIMDBSearch dest="3">
		<!--Just take the first movie ID from the search results page and hope for the best, then use that ID to get IMDB details-->
		<RegExp input="$$1" output="&lt;details&gt;&lt;url function=&quot;GetIMDBDetails&quot;&gt;http://www.imdb.com/title/\1/&lt;/url&gt;&lt;/details&gt;" dest="3">
			<expression noclean="1">&lt;a href="/title/([^/]+)</expression>
		</RegExp>
	</GetIMDBSearch>
	<GetIMDBDetails dest="3">
		<!--Enclose fetched details in <details></details>-->
		<RegExp input="$$5" output="&lt;details&gt;\1&lt;/details&gt;" dest="3">
			<!--Fetch studios-->
			<RegExp input="$$1" output="&lt;studio&gt;\1&lt;/studio&gt;" dest="5+">
				<expression repeat="yes">"/company/[^&gt;]+&gt;&lt;span[^&gt;]+&gt;([^&lt;]+)</expression>
			</RegExp>
			<!--Fetch runtime (Filmweb currently displays runtime in "X godz. Y min." format which doesn't play nice with Kodi skins)-->
			<RegExp input="$$1" output="&lt;runtime&gt;\1&lt;/runtime&gt;" dest="5+">
				<expression>&lt;time itemprop="duration".*?&gt;(\d+) min</expression>
			</RegExp>
			<!--Fetch MPAA rating-->
			<RegExp input="$$1" output="&lt;mpaa&gt;\1&lt;/mpaa&gt;" dest="5+">
				<expression>&lt;span itemprop="contentRating"&gt;([^&lt;]+)</expression>
			</RegExp>
			<expression noclean="1" />
		</RegExp>
	</GetIMDBDetails>
	<GetTMDBSearch dest="3">
		<!--Just use the first movie link from the search results page and hope for the best-->
		<RegExp input="$$1" output="&lt;details&gt;&lt;url function=&quot;GetTMDBDetails&quot;&gt;https://www.themoviedb.org\1/images/backdrops&lt;/url&gt;&lt;/details&gt;" dest="3">
			<expression noclean="1">&lt;div class="results"&gt;.*?href="([^"]+)</expression>
		</RegExp>
	</GetTMDBSearch>
	<GetTMDBDetails dest="3">
		<!--Enclose fanarts in <details><fanart></fanart></details>-->
		<RegExp input="$$5" output="&lt;details&gt;&lt;fanart&gt;\1&lt;/fanart&gt;&lt;/details&gt;" dest="3">
			<!--Fetch fanarts-->
			<RegExp input="$$1" output="&lt;thumb preview=&quot;\1&quot;&gt;\2/original/\3&lt;/thumb&gt;" dest="5">
				<!--Extract the list of fanarts (called "backdrops" in TMDB)-->
				<expression repeat="yes">&lt;img class="backdrop.*?data-src="((.*?)/w\d+[^/]+/([^"]+))</expression>
			</RegExp>
			<expression noclean="1" />
		</RegExp>
	</GetTMDBDetails>
</scraper>
